name: Receipt Processor CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # 毎日午前9時に実行
    - cron: '0 9 * * *'
  workflow_dispatch:
    # 手動実行も可能

env:
  PYTHON_VERSION: '3.13'
  GOOGLE_DRIVE_MONITOR_FOLDER: ${{ secrets.GOOGLE_DRIVE_MONITOR_FOLDER }}
  NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd tests
        python -m pytest -v --cov=../receipt-processor --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./tests/coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: tests/htmlcov/

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install linting tools
      run: |
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 receipt-processor/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 receipt-processor/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run black
      run: |
        black --check --diff receipt-processor/
    
    - name: Run isort
      run: |
        isort --check-only --diff receipt-processor/
    
    - name: Run mypy
      run: |
        mypy receipt-processor/ --ignore-missing-imports

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Bandit security scan
      uses: python-security/bandit-action@v1
      with:
        path: receipt-processor/
        level: low
        confidence: medium
    
    - name: Run Safety check
      run: |
        pip install safety
        safety check

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Google Cloud credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
    
    - name: Configure Google Cloud
      run: |
        gcloud config set project ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        gcloud auth configure-docker
    
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/receipt-processor:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/receipt-processor:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy receipt-processor \
          --image gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/receipt-processor:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.GOOGLE_CLOUD_REGION }} \
          --allow-unauthenticated \
          --set-env-vars="GOOGLE_DRIVE_MONITOR_FOLDER=${{ env.GOOGLE_DRIVE_MONITOR_FOLDER }},NOTION_DATABASE_ID=${{ env.NOTION_DATABASE_ID }}"

  process-receipts:
    name: Process Receipts
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Google Cloud credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
    
    - name: Configure Google Cloud
      run: |
        gcloud config set project ${{ secrets.GOOGLE_CLOUD_PROJECT }}
    
    - name: Run receipt processor
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        GOOGLE_DRIVE_MONITOR_FOLDER: ${{ env.GOOGLE_DRIVE_MONITOR_FOLDER }}
        NOTION_DATABASE_ID: ${{ env.NOTION_DATABASE_ID }}
        LOG_LEVEL: INFO
      run: |
        cd receipt-processor
        python main.py
    
    - name: Upload processing logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: processing-logs-${{ github.run_id }}
        path: |
          receipt-processor/logs/
          debug_output/
        retention-days: 30

